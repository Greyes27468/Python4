import os
# variables
max_length = 50
window_size = 0
current_doc = "NL.txt"


def clear_system():
    os.system('cls')


# Automatically print header
def top():
    print("╭" + "─" * max_length + "╮")


# Automatically print bottom
def bottom():
    print("╰" + "─" * max_length + "╯")


# Outlines the selected sentence
def print_line(word1):
    check_word = len(word1)
    print(("│ " + word1 + "{:>" + str(max_length - check_word) + "}").format(" │"))


def all_doc():
    f = open("Documents.txt")
    word = f.read()
    print(word)


def view_list():
    clear_system()
    with open(current_doc, 'r') as f:
        word = f.read()
        print(word)
        main()


# Function that opens and interrogates you on current_doc
def study_program():
    # Opens and reads the doc line for line
    f = open(current_doc)
    for line in f:
        word1, word2 = line.strip("\n").split("=")
        top()
        print_line("Quit at any time = x")
        print_line("Translate the word: " + str(word1))
        bottom()
        answer = input("Answer: ")
        # checks if answer is the same as the current line of document
        if answer == word2:
            clear_system()
            top()
            print_line("Correct!")
            bottom()
        # checks if answer is equal to x if so then returns to menu
        elif answer == "x":
            clear_system()
            main()
        else:
            # if the answer isn't equal to the current line of document it prints the following
            top()
            print_line("Sorry that wasn't the right answer")
            bottom()
    # When the loop is finished print the following and return to main
    top()
    print_line("Congrats you are done! Enter any key to continue")
    bottom()
    input("")
    main()


# Function that edits the document by rewriting it with the old text and the new text
def edit_document():
    global current_doc
    # declares variable that takes choice as its selected document
    filename = current_doc
    # opens file and reads it
    with open(filename, 'r') as file:
        lines = file.readlines()
        # prints each line one by one using enumerate
    for i, line in enumerate(lines):
        words = line.strip().split()
        for j, word in enumerate(words):
            print(f"Current word: '{word}'. Replace it? (Y/N): ", end="")
            answer = input().strip().lower()
            # checks if answer is y and then replaces the word in the document
            if answer == "y":
                new_word = input("New word: ")
                words[j] = new_word
        # combines the new words with the old ones and replaces the entire document
        lines[i] = ' '.join(words) + '\n'
    with open(filename, 'w') as file:
        file.writelines(lines)
        file.close()
        main()
        bottom()

    # selects a different document


def change_list():
    print(all_doc())
    global current_doc
    file = open("Documents.txt", 'r')
    words = file.read()
    answer = str(input("Change document to: "))
    # checks if the document exists if so change it
    if answer in words:
        clear_system()
        top()
        if ".txt" not in answer:
            current_doc = answer + ".txt"
        print_line("Changed document to: " + current_doc)
        bottom()
        main()
    # if document doesn't exist, nothing happens
    else:
        top()
        print_line("Unknown document detected")
        bottom()
        change_list()
    return current_doc

# creates a new document and adds it to the list


def new_list():
    top()
    print_line("Enter document name")
    bottom()
    new_doc = str(input("Name: "))
    new_doc = new_doc+".txt"
    with open(new_doc, 'x') as f:
        f.write(""+'\n')
    with open("Documents.txt", 'r') as file:
        j = file.read()
    with open("Documents.txt", 'w') as file:
        file.write(j)
        file.write('\n'+new_doc)
        print(j)
    main()

# adds a new word to the selected document


def add_word():
    f = open(current_doc)
    f.read().strip('\n').split("=")
    top()
    print_line("Word format: Woord=Word")
    print_line("Word may only contain letters besides: '=' ")
    print_line("Would you like to add a word? (Y/N)")
    bottom()
    answer = input("Answer: ")
    # checks if answer is y if so it adds a new word to selected document
    if answer == "y":
        clear_system()
        with open(current_doc, 'a') as f:
            new_word = str(input("New word is: "))
            with open("Banned.txt", 'r') as file:
                check = file.read()
                for i in new_word:
                    check2 = i
            check3 = 0
            for i in new_word:
                if i == "=":
                    check3 = check3 + 1
            if new_word in check:
                top()
                print_line("Use only letters")
                bottom()
            elif check2 in check:
                top()
                print_line("Error")
                bottom()
            elif check3 > 1:
                top()
                print_line("Word contains '=' twice or more")
                bottom()
            elif "=" not in new_word:
                top()
                print_line("Word doesn't contain: '=' ")
                bottom()
            elif "=" in new_word:
                f.write(new_word + "\n")
        add_word()
        f.close()
    # if user input is "n" returns to menu
    if answer == "n":
        f.close()
        clear_system()
        main()
    else:
        clear_system()
        add_word()
# checks what the user wants to select


def select():
    choice_select = input("Enter your choice: ")
    if choice_select == "s":
        clear_system()
        study_program()
    elif choice_select == "c":
        clear_system()
        change_list()
    elif choice_select == "n":
        clear_system()
        new_list()
    elif choice_select == "a":
        clear_system()
        edit_document()
    elif choice_select == "+":
        clear_system()
        add_word()
    elif choice_select == "v":
        view_list()
    elif choice_select == "q":
        quit()
    else:
        clear_system()
        top()
        print_line("Choice invalid")
        bottom()
        choice_menu()
        select()

# prints the format/layout of the menu


def choice_menu():
    top()
    for i in range(window_size):
        print_line(" ")
    print_line("Welcome to the test program")
    print_line("Current document is: " + current_doc)
    print_line("s - study current list")
    print_line("c - change list")
    print_line("n - new list")
    print_line("a - edit words in list")
    print_line("v - view current list")
    print_line("+ - add words to current document")
    print_line("q - quit program")
    for i in range(window_size):
        print_line(" ")
    bottom()


def main():
    choice_menu()
    select()


main()

